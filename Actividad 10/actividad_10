% Programa 1

function [tV, xV] = eulerJQ(f,a,b,x0,n)
    tV = zeros(n+1,1);
    tV(1) = a;
    
    xV = zeros(n+1,1);
    xV(1) = x0;
    
    h = (b-a)/n;
    
    for i=2:n+1
        xV(i) = xV(i-1) + h* double(f(tV(i-1),xV(i-1)));
        tV(i) = tV(i-1) + h;
    end
end

% Programa 2

function [tV, xV] = rungeKutta2JQ(f,a,b,x0,n)
    
    tV = zeros(n+1,1);
    tV(1) = a;
    
    xV = zeros(n+1,1);
    xV(1) = x0;
    
    h = (b-a)/n;
    
    for i=2:n+1
        hf = h * double(f(tV(i-1),xV(i-1)));
        tV(i) = tV(i-1) + h;
        xV(i) = xV(i-1) + (hf + h*double(f(tV(i), xV(i-1)+hf )))/2;        
    end
end

% Programa 3

function [tV, xV] = rungeKutta4JQ(f,a,b,x0,n)
    tV = zeros(n+1,1);
    tV(1) = a;
    
    xV = zeros(n+1,1);
    xV(1) = x0;
    
    h = (b-a)/n;
    
    for i=2:n+1
        k1 = h * double(f(tV(i-1),h)); % h*f(t,x).
        k2 = h * double(f(tV(i-1)+h/2,xV(i-1)+k1/2)); % h*f(t+h/2, x+k1/2).
        k3 = h * double(f(tV(i-1)+h/2,xV(i-1)+k2/2)); % h*f(t+h/2, x+k2/2).
        k4 = h * double(f(tV(i-1)+h,xV(i-1)+k3)); % h*f(t+h, x+k3).
        
        tV(i) = tV(i-1) + h; % t+h
        xV(i) = xV(i-1) + (k1+2*k2+2*k3+k4)/6;        
    end
end

syms x;
syms t;

% Problema 1
f(t,x) = t*exp(3*t) - 2*x;
x0 = 0;
a = 0;
b = 1;
n = 5;
sol(t) = t*exp(3*t)/5-exp(3*t)/25+exp(-2*t)/25;

% Metodo de Euler para problema 1
[tV, xV] = eulerJQ(f,a,b,x0,n)

tV =

                   0
   0.200000000000000
   0.400000000000000
   0.600000000000000
   0.800000000000000
   1.000000000000000


xV =

                   0
                   0
   0.072884752015620
   0.309340205028296
   0.911561818746531
   2.310645312150575

% Error metodo Euler
error = abs( double(sol(tV)) - xV )

error =

                   0
   0.026812801841426
   0.077893083458530
   0.186679360601228
   0.419295207650247
   0.908454006888916

% Metodo de Runge-Kutta de orden 2 para el problema 1
[tV, xV] = rungeKutta2JQ(f,a,b,x0,n)

tV =

                   0
   0.200000000000000
   0.400000000000000
   0.600000000000000
   0.800000000000000
   1.000000000000000


xV =

                   0
   0.036442376007810
   0.179450918199459
   0.564688278386086
   1.483629448472733
   3.546534183551022

% Error metodo de Runge-Kutta de orden 2 para el problema 1
error = abs( double(sol(tV)) - xV )

error =

                   0
   0.009629574166385
   0.028673082725308
   0.068668712756562
   0.152772422075954
   0.327434864511531

% Metodo de Runge-Kutta de orden 4 para el problema 1
[tV, xV] = rungeKutta4JQ(f,a,b,x0,n)

tV =

                   0
   0.200000000000000
   0.400000000000000
   0.600000000000000
   0.800000000000000
   1.000000000000000


xV =

                   0
   0.018052581632101
   0.137057365245239
   0.484483050651298
   1.336665445985152
   3.275284114344358

% Error metodo de Runge-Kutta de orden 4 para el problema 1

error = abs( double(sol(tV)) - xV )

error =

                   0
   0.008760220209325
   0.013720470228912
   0.011536514978226
   0.005808419588373
   0.056184795304867


% Problema 2

f(t,x) = 1 + (t - x)^2;
x0 = 1;
a = 2;
b = 3;
n = 10;
sol(t) = t + (1 / (1 - t));

% Metodo de Euler para el problema 2

[tV, xV] = eulerJQ(f,a,b,x0,n)

tV =

   2.000000000000000
   2.100000000000000
   2.200000000000000
   2.300000000000000
   2.400000000000000
   2.500000000000000
   2.600000000000001
   2.700000000000001
   2.800000000000001
   2.900000000000001
   3.000000000000001


xV =

   1.000000000000000
   1.200000000000000
   1.381000000000000
   1.548076100000000
   1.704615055139121
   1.852971077293038
   1.994835719974971
   2.131458100556792
   2.263782089699041
   2.392535054431794
   2.518287121529848

% Error metodo de Euler para problema 2

error = abs( double(sol(tV)) - xV )

error =

                   0
   0.009090909090909
   0.014333333333333
   0.017306869230769
   0.018900769424835
   0.019637743959705
   0.019835719974971
   0.019693394674439
   0.019337645254597
   0.018850843905478
   0.018287121529848

% Metodo de Runge-Kutta de orden 2 para el problema 2

[tV, xV] = rungeKutta2JQ(f,a,b,x0,n)

tV =

   2.000000000000000
   2.100000000000000
   2.200000000000000
   2.300000000000000
   2.400000000000000
   2.500000000000000
   2.600000000000001
   2.700000000000001
   2.800000000000001
   2.900000000000001
   3.000000000000001


xV =

   1.000000000000000
   1.190500000000000
   1.366037851531098
   1.530028845961612
   1.684925325698845
   1.832532830650476
   1.974209664372283
   2.110997019660381
   2.243706253344961
   2.372978888363635
   2.499328778717246

% Error metodo de Runge-Kutta de orden 2 para el problema 2
error = abs( double(sol(tV)) - xV )

error =

   1.0e-03 *

                   0
   0.409090909090803
   0.628815135569116
   0.740384807618177
   0.788960015441154
   0.800502682857474
   0.790335627716798
   0.767686221971875
   0.738191099483032
   0.705322162680933
   0.671221282753987

% Metodo de Runge-Kutta de orden 4 para el problema 2
[tV, xV] = rungeKutta4JQ(f,a,b,x0,n)

tV =

   2.000000000000000
   2.100000000000000
   2.200000000000000
   2.300000000000000
   2.400000000000000
   2.500000000000000
   2.600000000000001
   2.700000000000001
   2.800000000000001
   2.900000000000001
   3.000000000000001


xV =

   1.000000000000000
   1.227383810598044
   1.443890431159478
   1.653485634261432
   1.859304891855467
   2.063989252506611
   2.269924017492016
   2.479430265605442
   2.694943865048654
   2.919212611219239
   3.155547522305563

% Error metodo de Runge-Kutta de orden 4 para el problema 2
error = abs( double(sol(tV)) - xV )

error =

                   0
   0.036474719688953
   0.077223764492811
   0.122716403492201
   0.173590606141181
   0.230655919173278
   0.294924017492016
   0.367665559723089
   0.450499420604210
   0.545528400692923
   0.655547522305563

% Problema 3

f(t,x) = 1 + x/t;
x0 = 2;
a = 1;
b = 2;
n = 20;
sol(t) = t*log(t) + 2*t;

% Metodo de Euler para problema 3
[tV, xV] = eulerJQ(f,a,b,x0,n)

tV =

   1.000000000000000
   1.050000000000000
   1.100000000000000
   1.150000000000000
   1.200000000000000
   1.250000000000000
   1.300000000000000
   1.350000000000000
   1.400000000000000
   1.450000000000000
   1.500000000000000
   1.550000000000000
   1.600000000000001
   1.650000000000001
   1.700000000000001
   1.750000000000001
   1.800000000000001
   1.850000000000001
   1.900000000000001
   1.950000000000001
   2.000000000000001


xV =

   2.000000000000000
   2.150000000000000
   2.302380952380952
   2.457034632034632
   2.613862224731790
   2.772773150762281
   2.933684076792772
   3.096518079746340
   3.261203934551760
   3.427675503642895
   3.595871210665063
   3.765733584353899
   3.937208861268541
   4.110246638183183
   4.284799566612977
   4.460823083278064
   4.638275171371723
   4.817116148354271
   4.997308476688171
   5.178816594495754
   5.361606763585389

% Error metodo de Euler para el problema 3
error = abs( double(sol(tV)) - xV )

error =

                   0
   0.001229672377904
   0.002460245403805
   0.003691601696801
   0.004923643420956
   0.006156288380482
   0.007389467014966
   0.008623120061616
   0.009857196717938
   0.011091653184206
   0.012326451497183
   0.013561558589392
   0.014796945524636
   0.016032586872424
   0.017268460192713
   0.018504545608926
   0.019740825452091
   0.020977283962661
   0.022213907039379
   0.023450682026774
   0.024687597534502

% Metodo de Runge-Kutta de orden 2 para el problema 3
[tV, xV] = rungeKutta2JQ(f,a,b,x0,n)

tV =

   1.000000000000000
   1.050000000000000
   1.100000000000000
   1.150000000000000
   1.200000000000000
   1.250000000000000
   1.300000000000000
   1.350000000000000
   1.400000000000000
   1.450000000000000
   1.500000000000000
   1.550000000000000
   1.600000000000001
   1.650000000000001
   1.700000000000001
   1.750000000000001
   1.800000000000001
   1.850000000000001
   1.900000000000001
   1.950000000000001
   2.000000000000001


xV =

   2.000000000000000
   2.151190476190476
   2.304764481550196
   2.460613459960580
   2.618638320538576
   2.778748250561017
   2.940859719044996
   3.104895634164961
   3.270784625906520
   3.438460431511555
   3.607861365931494
   3.778929863075447
   3.951612076400462
   4.125857529545552
   4.301618809407004
   4.478851295397966
   4.657512919710924
   4.837563954267458
   5.018966820741259
   5.201685920612317
   5.385687482679300

% Error metodo de Runge-Kutta de orden 2 para el problema 3
error = abs( double(sol(tV)) - xV )

error =

   1.0e-03 *

                   0
   0.039196187427315
   0.076716234561403
   0.112773770852392
   0.147547614169241
   0.181188581745317
   0.213824762742121
   0.245565642996048
   0.276505363178359
   0.306725315545098
   0.336296230752264
   0.365279867843515
   0.393730392715064
   0.421695510055109
   0.449217398685420
   0.476333489023872
   0.503077112890438
   0.529478049474008
   0.555562986291669
   0.581355910211023
   0.606878440590819

% Metodo de Runge-Kutta de orden 4 para el problema 3
[tV, xV] = rungeKutta4JQ(f,a,b,x0,n)

tV =

   1.000000000000000
   1.050000000000000
   1.100000000000000
   1.150000000000000
   1.200000000000000
   1.250000000000000
   1.300000000000000
   1.350000000000000
   1.400000000000000
   1.450000000000000
   1.500000000000000
   1.550000000000000
   1.600000000000001
   1.650000000000001
   1.700000000000001
   1.750000000000001
   1.800000000000001
   1.850000000000001
   1.900000000000001
   1.950000000000001
   2.000000000000001


xV =

   2.000000000000000
   2.134167186009839
   2.269637547143239
   2.406342653131248
   2.544220456861891
   2.683214460431360
   2.823273018815235
   2.964348754083650
   3.106398059206514
   3.249380675065913
   3.393259327745030
   3.537999415797940
   3.683568739235774
   3.829937263544799
   3.977076913291551
   4.124961390850512
   4.273566016570885
   4.422867587325677
   4.572844250892451
   4.723475394026371
   4.874741542422396

% Error metodo de Runge-Kutta de orden 4 para el problema 3
error = abs( double(sol(tV)) - xV )

error =

                   0
   0.017062486368064
   0.035203650641518
   0.054383580600185
   0.074565411290854
   0.095714978711402
   0.117800524992503
   0.140792445724306
   0.164663072063184
   0.189386481761187
   0.214938334417216
   0.241295727145351
   0.268437067557403
   0.296341961510808
   0.324991113514138
   0.354366238036478
   0.384449980252930
   0.415225844991255
   0.446678132835100
   0.478791882496157
   0.511552818697495

diary off
